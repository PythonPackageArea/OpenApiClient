import argparse
import json
import os
import sys

from openapi_client.internal.types.models import Project
from openapi_client.generator import ApiClientGenerator
from openapi_client.config import OpenApiConfig

import httpx
import jsonref


def confirm_choice(message: str) -> bool:
    """–ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    while True:
        choice = input(f"{message} (y/n): ").lower().strip()
        if choice in ["y", "yes", "–¥–∞"]:
            return True
        elif choice in ["n", "no", "–Ω–µ—Ç"]:
            return False
        print("–í–≤–µ–¥–∏—Ç–µ y/n")


def generate():
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ OpenAPI –∫–ª–∏–µ–Ω—Ç–∞"""
    parser = argparse.ArgumentParser(description="–ì–µ–Ω–µ—Ä–∞—Ü–∏—è Python –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ OpenAPI")
    parser.add_argument("--url", type=str, help="URL –∫ OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    parser.add_argument("--dirname", type=str, help="–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞")
    parser.add_argument(
        "--init-config", action="store_true", help="–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª openapi.toml"
    )
    parser.add_argument(
        "--force", action="store_true", help="–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"
    )

    args = parser.parse_args()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥–∞
    if args.init_config:
        config = OpenApiConfig(
            url=args.url,
            dirname=args.dirname or "api_client",
        )
        config.save_to_file()
        print("‚úÖ –°–æ–∑–¥–∞–Ω –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª openapi.toml")
        return

    # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞ –∏–∑ —Ñ–∞–π–ª–∞
    file_config = OpenApiConfig.from_file(search_dir=args.dirname)

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if file_config and (args.url or args.dirname):
        # –ï—Å—Ç—å –∏ –∫–æ–Ω—Ñ–∏–≥ –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã - —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("üîß –ù–∞–π–¥–µ–Ω –∫–æ–Ω—Ñ–∏–≥ —Ñ–∞–π–ª openapi.toml:")
        print(f"   URL: {file_config.url}")
        print(f"   –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {file_config.dirname}")
        print()
        print("üìù –ü–µ—Ä–µ–¥–∞–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã:")
        if args.url:
            print(f"   URL: {args.url}")
        if args.dirname:
            print(f"   –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {args.dirname}")
        print()

        if args.force or confirm_choice("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥ –∏–∑ —Ñ–∞–π–ª–∞?"):
            final_config = file_config
        else:
            final_config = file_config.merge_with_args(args)
    elif file_config:
        # –¢–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–∏–≥ (–Ω–∞–π–¥–µ–Ω –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏–ª–∏ —Ç–µ–∫—É—â–µ–π)
        config_location = "—É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏" if args.dirname else "openapi.toml"
        print(f"üìã –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–≥ –∏–∑ {config_location}")
        final_config = file_config
    elif args.url:
        # –¢–æ–ª—å–∫–æ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
        final_config = OpenApiConfig(url=args.url, dirname=args.dirname or "api_client")
    else:
        # –ù–µ—Ç –Ω–∏ –∫–æ–Ω—Ñ–∏–≥–∞ –Ω–∏ URL
        print("‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ URL –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥ —Å --init-config")
        sys.exit(1)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    if not final_config.url:
        print("‚ùå –û—à–∏–±–∫–∞: URL –Ω–µ —É–∫–∞–∑–∞–Ω –Ω–∏ –≤ –∫–æ–Ω—Ñ–∏–≥–µ, –Ω–∏ –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö")
        sys.exit(1)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
    print(f"üöÄ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ {final_config.url}")
    print(f"üìÅ –ü–∞–ø–∫–∞: {final_config.dirname}")

    try:
        # –ó–∞–≥—Ä—É–∑–∫–∞ OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏
        print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
        openapi_spec = httpx.get(
            url=final_config.url
            + ("" if final_config.url.endswith("/") else "/")
            + "openapi.json"
        ).json()
        openapi_spec = dict(jsonref.loads(json.dumps(openapi_spec)))

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è
        print("‚öôÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞...")
        generator = ApiClientGenerator(openapi_spec, source_url=final_config.url)
        project: Project = generator.generate()

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
        current_dir = os.getcwd()
        work_path = os.path.join(current_dir, final_config.dirname)

        print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ {len(project.files)} —Ñ–∞–π–ª–æ–≤...")

        for code_model in project.files:
            path = os.path.join(work_path, code_model.file_name)
            os.makedirs(os.path.dirname(path), exist_ok=True)

            with open(path, "w") as f:
                f.write(str(code_model))

        print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üì¶ –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω –≤: {work_path}")

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if not file_config and (
            args.force or confirm_choice("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ openapi.toml?")
        ):
            config_path = os.path.join(work_path, "openapi.toml")
            final_config.save_to_file(config_path)
            print(f"üíæ –ö–æ–Ω—Ñ–∏–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {config_path}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        sys.exit(1)


# Deprecated —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
def gen():
    """Deprecated: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ openapi-client"""
    print("‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ gen-api —É—Å—Ç–∞—Ä–µ–ª–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: openapi-client")
    generate()


def update():
    """Deprecated: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ openapi-client"""
    print("‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ update-api —É—Å—Ç–∞—Ä–µ–ª–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: openapi-client")
    generate()


if __name__ == "__main__":
    generate()
